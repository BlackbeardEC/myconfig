#! /bin/sh
# Get last set pywal colors at start
#. "${HOME}/.cache/wal/colors.sh"

bspc monitor -d 1 2 3 4 5 6 7 8 9 10

#
FB=`xrdb -query | grep -E "^\*\.foreground" | cut -d':' -f2 | sed -e 's/^[[:space:]]*//'`
NB=`xrdb -query | grep -E "^\*\.background" | cut -d':' -f2 | sed -e 's/^[[:space:]]*//'`

bspc config border_width        2
bspc config window_gap          18
#bspc config bottom_padding      0
#bspc config top_padding         30
#bspc config right_padding       20
#bspc config left_padding        20

bspc config normal_border_color $NB
bspc config focused_border_color $FB
bspc config active_border_color $NB
# bspc config normal_border_color "$color0"
# bspc config focused_border_color "$color3"
# bspc config active_border_color "$color2"

bspc config split_ratio          0.46
bspc config borderless_monocle   true
bspc config gapless_monocle      true
bspc config automatic_scheme     spiral
bspc config initial_polarity     first_child

bspc config presel_feedback_color $NB
# bspc config presel_feedback_color "$color0"
bspc rule -a Gimp desktop='^8' state=floating follow=on
bspc rule -a firefox desktop='^2'
bspc rule -a qutebrowser desktop='^2'
bspc rule -a Steam desktop='^5'
bspc rule -a mpv state=floating
bspc rule -a feh state=floating
bspc rule -a xterm state=floating
bspc rule -a Pcmanfm state=floating
bspc rule -a Galculator state=floating
bspc rule -a Kupfer.py focus=on
bspc rule -a Screenkey manage=off

# Scratch pad
bspc rule -a st-256color:scratchy sticky=on state=floating rectangle=1280x720+320+180
#xst -c scratchy -e ~/.local/bin/scratch &
#bspc rule -a URxvt:scratchy sticky=on state=floating rectangle=1280x720+320+180

# moved polybar startup to ../polybar/launch.sh
# as suggested in polybar wiki
# killall polybar && polybar main -q &
if ! pgrep -x "polybar" > /dev/null
then
    $HOME/.config/polybar/launch.sh
else
    killall polybar && $HOME/.config/polybar/launch.sh
fi

# adding sxhkd here so when I edit sxhkdrc I don't lose it
# if I close the terminal I ran it from.
if pgrep -x "sxhkd" > /dev/null
then
    killall sxhkd && sxhkd &
else
    sxhkd &
fi

# Dunst
if pgrep -x "dunst" > /dev/null
then
    killall dunst && dunst &
else
    dunst &
fi

# Compton
# if pgrep -x "compton" > /dev/null
# then
#     killall compton && compton -b --unredir-if-possible &
# else
#     compton -b --unredir-if-possible &
# fi

# MPD well Mopidy
if pgrep -x "mopidy" > /dev/null
then
    echo "Mopidy already running"
else
    mopidy &
fi

xrdb ~/.Xdefaults


picom -b
#compton -b
#compton -b --unredir-if-possible
xsetroot -cursor_name pirate
