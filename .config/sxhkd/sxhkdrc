#
# wm independent hotkeys
#

# terminal emulator
# I switch between xst and urxvt
super + Return
    urxvt

# program launcher
super + @space
    /home/blackbeard/.local/bin/dmen.sh
    # dmenu_run -i -l 10 -nb '#011627' -nf '#e63d14' -sf '#011627' -sb '#e63d14' -fn 'source code pro:size=10'

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

# volume
# Old volume
# super + F12
#   amixer -q sset Master 5%+
#
# super + F11
#   amixer -q sset Master 5%-
#
# super + F10
#   amixer -q set Master toggle
#
# New multimedia keys
#
XF86Audio{Mute,RaiseVolume,LowerVolume}
    amixer -q sset Master {toggle,5%+,5%-}

XF86Audio{Prev,Next,Stop,Play}
	mpc -q {prev,next,stop,toggle}

# open ncmpcpp
super + n
    mpc volume 4; urxvt -e ncmpcpp

#
# bspwm hotkeys
#

# quit bspwm normally
super + alt + Escape
	bspc quit

# close and kill
super + {_,shift + }w
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# if the current node is automatic, send it to the last manual, otherwise pull the last leaf
super + y
	bspc query -N -n focused.automatic && bspc node -n last.!automatic || bspc node last.leaf -n focused

# swap the current node and the biggest node
super + g
	bspc node -s biggest

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {x,y,z}
	bspc node -g {locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

# Rotate all windows {counter-}clockwise by 90 degrees.
super + {_,shift + }r
	bspc node @/ --rotate {90,-90}

# Dynamic gaps.
super + shift + bracket{left,right}
	bspc config -d focused window_gap "$(($(bspc config -d focused window_gap) {-,+} 5 ))"

# map printscrn to scrot
Print
  scrot -q 75 '%Y-%m-%d-%T_$wx$h_scrot.png' -e 'mv $f ~/media/pics/screens/'

super + Print
  sleep 0.2; scrot -s 'Selection-%Y-%m-%d-%T_$wx$h_scrot.png' -e 'mv $f ~/media/pics/screens/'

# map super + z to take a selection screen shot and put it in /tmp and show it with feh
super + z
  sleep 0.2; scrot -s 'Selection-%Y-%m-%d-%T_$wx$h_scrot.png' -e 'mv $f /tmp/ && feh /tmp/$f'


# spawn empty node
# bspc node @/ -p east -i
super + shift + ctrl + {h,j,k,l}
	bspc node @/ -p {west,south,north,east} -i

# for i in $(bspc query -N -n '.leaf.!window.local'); do bspc node $i -k; done
# kill empty receptacle nodes
super + shift + ctrl + c
  for i in $(bspc query -N -n '.leaf.!window.local'); do bspc node $i -k; done

#
# Toggle scratch pad
#
alt + s
    /home/blackbeard/.local/bin/scratch

# Run dmenuarchwiki.sh from Luke Smith github
super + a
    ~/.local/bin/dmenuarchwiki.sh

# Dmenu unicode characters again luke smith
super + u
    ~/.scripts/dmenuunicode

# open battle.net
# alt + b
#     wine "/home/blackbeard/bnet/drive_c/Program Files (x86)/Battle.net/Battle.net Launcher.exe"

# passmenu
alt + p
    passmenu

# run my rust auto clicking max craft script
ctrl + alt + m
    ~/.scripts/rust_auto_craft

# and my sell metal for scrap script
ctrl + alt + n
    ~/.scripts/rust_sell_metal

# setting up i3lock
ctrl + alt + l
    i3lock -f -i ~/wall.test.png

#this scratchpad stuff isn't working
# make any window a scratch pad and cycle through them
# super + p
# 	id=$(bspc query -N -n "focused");\
# 	if [ -n "$id" ];then \
# 		xprop -id $id -f _SCRATCH 32ii -set _SCRATCH $(date +%s,%N);\
# 		bspc node -t "floating";\
# 		xdotool windowunmap $id;\
# 	fi
#
# # cycle through the scratch pads
# super + shift + p
# 	i=$(bspc query -N -n "focused.floating");\
# 	if [ -n "$i" ];then \
# 		xprop -id $i -f _SCRATCH 32ii -set _SCRATCH $(date +%s,%N);\
# 		xdotool windowunmap $i;\
# 	else;\
# 		i=$(for w in $(xwininfo -root -children | grep -e "^\s*0x[0-9a-f]\+" -o);do \
# 			t=$(xprop -id $w _SCRATCH | grep ' = \(.*\)');\
# 			if [ -n "$t" ];then \
# 				echo $t $w;\
# 			fi;\
# 		done|sort -n|head -n1|cut -d" " -f 5);\
# 		if [ -n "$i" ];then \
# 			xprop -id $i -remove _SCRATCH;\
# 			bspc rule -a \* state=floating center=on --one-shot;\
# 			xdotool windowmap $i;\
# 			bspc node -f $i;\
# 		fi;\
# 	fi


shift + alt + x
    pkill -f 'x11grab'

